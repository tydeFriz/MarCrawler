using System.Collections;
using System.Collections.Generic;

public class l_01 : DungeonLayout{
	
	public l_01(){

		char[,] defGrid = new char[25, 25]{
			//y->                 4                        9                       14                       19                       24       x
			{'.', '.', '.', '.', '.', '.', '.', '.', 'w', 'w', 'w', 'w', 'w', 'E', 'w', 'w', 'w', 'w', 'w', 'w', 'w', '.', '.', '.', '.'},//  |
			{'w', 'w', 'w', 'S', 'w', 'w', 'w', 'w', 'D', 'w', 'w', 'w', 'w', 'D', 'w', 'w', 'w', 'w', 'D', 'w', '.', 'w', 'w', 'S', 'w'},//  v
			{' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w', '.', 'w', ' ', ' ', ' '},
			{' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w', '.', 'D', ' ', ' ', ' '},
			{' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w', '.', 'w', ' ', ' ', ' '}, // 4
			{' ', ' ', ' ', ' ', ' ', ' ', ' ', 'D', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'D', '.', 'w', 'w', 'D', 'w'},
			{' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w', '.', 'w', '.', '.', '.'},
			{' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w', '.', 'w', '.', '.', '.'},
			{' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w', '.', 'D', '.', '.', '.'},
			{'w', 'w', 'w', 'D', 'w', 'w', 'w', 'w', 'D', 'w', 'w', 'w', 'w', 'D', 'w', 'w', 'w', 'w', 'D', 'w', 'D', 'w', '.', '.', '.'}, // 9
			{'.', '.', '.', '.', '.', '.', 'w', '.', '.', '.', '.', '.', '.', '_', 'w', '.', '.', 'D', '.', '.', '.', 'w', '.', '.', '.'},
			{'.', '.', '.', '.', '.', '.', 'S', '.', '.', '.', '.', '.', '.', '_', 'w', '.', '.', 'w', '.', '.', '.', 'w', 'w', 'D', 'w'},
			{'w', 'w', 'w', 'D', 'w', 'w', 'w', '.', '.', '.', '.', '.', '.', 'w', 'w', 'D', 'w', 'w', '.', '.', '.', 'w', ' ', ' ', ' '},
			{'w', ' ', ' ', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.', '.', 'w', ' ', ' ', ' ', 'w', '.', '.', '.', 'D', ' ', ' ', ' '},
			{'w', ' ', ' ', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.', '.', 'w', ' ', ' ', ' ', 'w', '.', '.', '.', 'w', ' ', ' ', ' '}, // 14
			{'w', ' ', ' ', ' ', ' ', ' ', 'S', '.', '.', '.', '.', '.', '.', 'D', ' ', ' ', ' ', 'D', '.', '.', '.', 'w', 'w', 'D', 'w'},
			{'w', ' ', ' ', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.', '.', 'w', ' ', ' ', ' ', 'w', '.', '.', '.', 'w', '.', '.', '.'},
			{'w', ' ', ' ', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.', '.', 'w', ' ', ' ', ' ', 'w', '.', '.', '.', 'w', '.', '.', '.'},
			{'w', 'w', 'w', 'S', 'w', 'w', 'w', '.', '.', '.', '.', '.', '.', 'w', 'w', 'D', 'w', 'w', 'w', 'w', '_', 'w', '.', '.', '.'},
			{'.', '.', '.', '.', 'w', 'w', 'w', 'w', 'w', 'D', 'w', 'w', 'w', 'w', 'w', '.', '.', '.', '.', 'w', 'w', 'w', 'D', 'w', 'w'}, // 19
			{'.', '.', '.', '.', 'w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w', '.', '.', '.', '.', 'w', ' ', ' ', ' ', ' ', ' '},
			{'.', '.', '.', '.', 'D', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'D', '.', '.', '.', '.', 'w', ' ', ' ', ' ', ' ', ' '},
			{'.', '.', '.', '.', 'w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w', '.', '.', '.', '.', 'D', ' ', ' ', ' ', ' ', ' '},
			{'.', '.', '.', '.', 'w', 'w', 'w', 'w', 'w', 'D', 'w', 'w', 'w', 'w', 'w', '.', '.', '.', '.', 'w', ' ', ' ', ' ', ' ', ' '},
			{'.', '.', '.', '.', '.', 'w', 'w', 'w', 'w', 'I', 'w', 'w', 'w', 'w', 'w', '.', '.', '.', '.', 'w', ' ', ' ', ' ', ' ', ' '}  // 24
		};
		grid = new DungeonGrid(25, 25, defGrid);

		rooms = new List<PseudoRoom> {
			//new PseudoRoom(new Coordinates(2, 0), 7, 7),
			new PseudoRoom(new Coordinates(13, 1), 5, 5),
			//new PseudoRoom(new Coordinates(2, 8), 11, 7),
			new PseudoRoom(new Coordinates(13, 14), 3, 5),
			//new PseudoRoom(new Coordinates(20, 5), 3, 9),
			new PseudoRoom(new Coordinates(2, 22), 3, 3),
			new PseudoRoom(new Coordinates(12, 22), 3, 3),
			new PseudoRoom(new Coordinates(21, 21), 5, 5),
		};

		pathableAreas = new List<PathableArea> {
			new PathableArea(new Coordinates(0, 0), 1, 8),
			new PathableArea(new Coordinates(10, 0), 2, 6),
			new PathableArea(new Coordinates(19, 0), 6, 4),
			new PathableArea(new Coordinates(10, 7), 9, 6),
			//new PathableArea(new Coordinates(15, 10), 2, 2),
			//new PathableArea(new Coordinates(19, 15), 6, 4),
			//new PathableArea(new Coordinates(10, 18), 8, 3),
			//new PathableArea(new Coordinates(1, 20), 8, 1),
			//new PathableArea(new Coordinates(0, 21), 1, 4),
			//new PathableArea(new Coordinates(6, 22), 5, 3),
			//new PathableArea(new Coordinates(16,22), 3, 3)
		};

	}

}
