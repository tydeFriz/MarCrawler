using System.Collections.Generic;

public class l_02 : DungeonLayout{
	
	public l_02 (){
		char[,] defGrid = new char[30, 30]{
			//y->                 4                        9                       14                       19                       24                       29       x
			{'.', '.', '.', 'S', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'w', 'E', 'w', '.', '.', '.', '.', '.', '.', '.', '.', 'D', '.', '.', '.', '.', '.'},//  |
			{'.', '.', '.', 'w', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'w', 'p', 'w', '.', '.', '.', '.', '.', '.', '.', '.', 'w', '.', '.', '.', '.', '.'},//  v
			{'.', '.', '.', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'D', 'w', 'w', 'w', 'w', 'w', 'w', 'S', 'w', 'w', 'w', '.', '.', '.', '.', '.'},
			{'.', '.', '.', 'w', '.', 'w', '.', '.', '.', '.', 'w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w', ' ', ' ', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.'},
			{'.', '.', '.', 'w', '.', 'w', '.', '.', '.', '.', 'w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w', ' ', ' ', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.'},// 4
			{'.', '.', '.', 'w', '.', 'w', '.', '.', '.', '.', 'D', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'D', ' ', ' ', ' ', ' ', ' ', 'S', '.', '.', '.', '.', '.'},
			{'.', '.', '.', 'D', '.', 'D', '.', '.', '.', '.', 'w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w', ' ', ' ', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.'},
			{'w', 'D', 'w', 'w', '.', 'w', '.', '.', '.', '.', 'w', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'w', ' ', ' ', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.'},
			{' ', ' ', ' ', 'w', '.', 'w', '.', '.', '.', '.', 'w', 'w', 'w', 'w', 'D', 'w', 'w', 'w', 'w', 'w', 'w', 'D', 'w', 'w', 'w', '.', '.', '.', '.', '.'},
			{' ', ' ', ' ', 'w', '.', 'w', '.', '.', '.', '.', 'w', 'w', ' ', ' ', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.', '.', 'w', '.', '.', '.', '.', '.'},// 9
			{' ', ' ', ' ', 'w', '.', 'w', '.', '.', '.', '.', 'p', 'D', ' ', ' ', ' ', ' ', ' ', 'D', '.', '.', '.', '.', '.', '.', 'S', '.', '.', '.', '.', '.'},
			{' ', ' ', ' ', 'D', '.', 'w', 'w', 'D', 'w', 'w', 'w', 'w', ' ', ' ', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.', '.', 'w', '.', '.', '.', '.', '.'},
			{' ', ' ', ' ', 'w', 'w', ' ', ' ', ' ', ' ', ' ', 'w', 'w', 'w', 'w', 'D', 'w', 'w', 'w', 'w', 'D', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'S', 'w', 'w'},
			{' ', ' ', ' ', 'w', 'w', ' ', ' ', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.', '.', 'w', ' ', ' ', ' ', 'w', '.', '.', 'w', ' ', ' ', ' ', ' ', ' '},
			{' ', ' ', ' ', 'w', 'w', ' ', ' ', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.', '.', 'D', ' ', ' ', ' ', 'D', '.', '.', 'w', ' ', ' ', ' ', ' ', ' '},// 14
			{'w', 'w', 'w', 'w', 'w', ' ', ' ', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.', '.', 'w', ' ', ' ', ' ', 'w', '.', '.', 'w', ' ', ' ', ' ', ' ', ' '},
			{'.', '.', '.', '.', 'D', ' ', ' ', ' ', ' ', ' ', 'D', '.', '.', '.', '.', '.', '.', 'w', 'w', 'D', 'w', 'w', '.', '.', 'D', ' ', ' ', ' ', ' ', ' '},
			{'.', '.', '.', '.', 'w', ' ', ' ', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.', '.', 'w', '.', '.', '.', 'w', 'w', 'w', 'w', ' ', ' ', ' ', ' ', ' '},
			{'.', '.', '.', '.', 'w', ' ', ' ', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.', '.', 'w', '.', '.', '.', 'D', '.', '.', 'w', ' ', ' ', ' ', ' ', ' '},
			{'.', '.', '.', '.', 'w', ' ', ' ', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.', '.', 'w', '.', '.', '.', 'w', '.', '.', 'w', ' ', ' ', ' ', ' ', ' '},// 19
			{'.', '.', '.', '.', 'w', ' ', ' ', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.', '.', 'w', 'w', 'D', 'w', 'w', '.', '.', 'w', 'w', 'w', 'D', 'w', 'w'},
			{'.', '.', '.', '.', 'w', 'w', 'w', 'D', 'w', 'w', 'w', '.', '.', '.', '.', '.', '.', 'w', ' ', ' ', ' ', 'w', '.', '.', 'D', '.', '.', '.', '.', '.'},
			{'.', '.', '.', '.', 'w', '.', '.', '.', '.', '.', 'w', '.', '.', '.', '.', '.', '.', 'D', ' ', ' ', ' ', 'D', '.', '.', 'w', '.', '.', '.', '.', '.'},
			{'.', '.', '.', '.', 'D', '.', '.', '.', '.', '.', 'w', '.', '.', '.', '.', '.', '.', 'w', ' ', ' ', ' ', 'w', '.', '.', 'w', '.', '.', '.', '.', '.'},
			{'.', '.', '.', '.', 'w', '.', '.', '.', '.', '.', 'w', 'w', 'D', 'w', 'w', 'w', 'w', 'w', 'w', 'D', 'w', 'w', 'w', 'w', 'w', '.', '.', '.', '.', '.'},// 24
			{'.', '.', '.', '.', 'w', '.', '.', '.', '.', '.', 'w', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'w', '.', '.', '.', '.', '.'},
			{'w', 'S', 'w', 'w', 'w', '.', '.', '.', '.', '.', 'w', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'w', '.', '.', '.', '.', '.'},
			{' ', ' ', ' ', 'w', 'w', '.', '.', '.', '.', '.', 'D', ' ', ' ', ' ', 'D', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'w', '.', '.', '.', '.', '.'},
			{' ', ' ', ' ', 'w', 'w', '.', '.', '.', '.', '.', 'w', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'D', '.', '.', '.', '.', '.'},
			{' ', ' ', ' ', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', ' ', ' ', ' ', 'w', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'w', 'w', 'w', 'w', 'w', 'I'},// 29

		};
		grid = new DungeonGrid(30, 30, defGrid);

		rooms = new List<PseudoRoom> {
			new PseudoRoom(new Coordinates(0, 8), 3, 7),
			new PseudoRoom(new Coordinates(27, 0), 3, 3),
			//new PseudoRoom(new Coordinates(12, 5), 9, 5),
			new PseudoRoom(new Coordinates(3, 11), 5, 7),
			new PseudoRoom(new Coordinates(3, 19), 5, 5),
			new PseudoRoom(new Coordinates(9, 12), 3, 5),
			new PseudoRoom(new Coordinates(13, 18), 3, 3),
			new PseudoRoom(new Coordinates(21, 18), 3, 3),
			new PseudoRoom(new Coordinates(25, 11), 5, 3),
			new PseudoRoom(new Coordinates(13, 25), 7, 5)
		};

		pathableAreas = new List<PathableArea> {
			new PathableArea(new Coordinates(0, 0), 7, 3),
			new PathableArea(new Coordinates(16, 0), 10, 4),
			new PathableArea(new Coordinates(0, 4), 2, 9),
			new PathableArea(new Coordinates(3, 4), 9, 1),
			new PathableArea(new Coordinates(3, 6), 8, 4),
			new PathableArea(new Coordinates(22, 5), 7, 5),
			new PathableArea(new Coordinates(13, 11), 11, 6),
			new PathableArea(new Coordinates(25, 15), 5, 9),
			new PathableArea(new Coordinates(0, 16), 2, 8),
			new PathableArea(new Coordinates(9, 18), 3, 6),
			new PathableArea(new Coordinates(17, 18), 3, 3),
			new PathableArea(new Coordinates(13, 22), 4, 2),
			new PathableArea(new Coordinates(18, 22), 6, 2),
			new PathableArea(new Coordinates(0, 25), 12, 5),
			new PathableArea(new Coordinates(21, 25), 8, 5)
		};

	}

}

